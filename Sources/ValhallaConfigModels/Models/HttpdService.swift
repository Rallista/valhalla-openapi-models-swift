//
// HttpdService.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct HttpdService: Codable, Hashable {
    public var drainSeconds: Int? = 28
    public var interrupt: String? = "ipc:///tmp/interrupt"
    public var listen: String? = "tcp://_*:8002"
    public var loopback: String? = "ipc:///tmp/loopback"
    public var shutdownSeconds: Int? = 1

    public init(drainSeconds: Int? = 28, interrupt: String? = "ipc:///tmp/interrupt", listen: String? = "tcp://_*:8002", loopback: String? = "ipc:///tmp/loopback", shutdownSeconds: Int? = 1) {
        self.drainSeconds = drainSeconds
        self.interrupt = interrupt
        self.listen = listen
        self.loopback = loopback
        self.shutdownSeconds = shutdownSeconds
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case drainSeconds = "drain_seconds"
        case interrupt
        case listen
        case loopback
        case shutdownSeconds = "shutdown_seconds"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(drainSeconds, forKey: .drainSeconds)
        try container.encodeIfPresent(interrupt, forKey: .interrupt)
        try container.encodeIfPresent(listen, forKey: .listen)
        try container.encodeIfPresent(loopback, forKey: .loopback)
        try container.encodeIfPresent(shutdownSeconds, forKey: .shutdownSeconds)
    }
}
