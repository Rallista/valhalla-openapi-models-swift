//
// OdinMarkupFormatter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
    import AnyCodable
#endif

public struct OdinMarkupFormatter: Codable, Hashable {
    public var markupEnabled: Bool? = false
    public var phonemeFormat: String? = "<TEXTUAL_STRING> (<span class=<QUOTES>phoneme<QUOTES>>/<VERBAL_STRING>/</span>)"

    public init(markupEnabled: Bool? = false, phonemeFormat: String? = "<TEXTUAL_STRING> (<span class=<QUOTES>phoneme<QUOTES>>/<VERBAL_STRING>/</span>)") {
        self.markupEnabled = markupEnabled
        self.phonemeFormat = phonemeFormat
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case markupEnabled = "markup_enabled"
        case phonemeFormat = "phoneme_format"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(markupEnabled, forKey: .markupEnabled)
        try container.encodeIfPresent(phonemeFormat, forKey: .phonemeFormat)
    }
}
